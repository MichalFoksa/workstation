/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.0.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package net.michalfoksa.demo.workshop.workstation.rest.api;

import net.michalfoksa.demo.workshop.workstation.rest.model.CreateWorkOrderResponse;
import net.michalfoksa.demo.workshop.workstation.rest.model.WorkOrder;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;

@Validated
@Api(value = "WorkOrders", description = "the WorkOrders API")
public interface WorkOrdersApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "", nickname = "createWorkOrder", notes = "Create a work order", response = CreateWorkOrderResponse.class, responseContainer = "List", tags={ "workOrders", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = CreateWorkOrderResponse.class, responseContainer = "List") })
    @RequestMapping(value = "/workorders",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<List<CreateWorkOrderResponse>> createWorkOrder(@ApiParam(value = "Work order for a workstation" ,required=true )  @Valid @RequestBody WorkOrder workOrder) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"runtimeContext\" : {    \"key\" : \"{}\"  },  \"messageContext\" : {    \"correlationId\" : \"correlationId\"  },  \"body\" : {    \"name\" : \"name\",    \"parameters\" : {      \"key\" : \"parameters\"    },    \"url\" : \"url\"  }}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
